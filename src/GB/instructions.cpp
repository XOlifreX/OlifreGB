#include "GB/instructions.h"

// ******************************************************************************************************
// ************************************************ 0x00 ************************************************
// ******************************************************************************************************

// 0x00: NOP
SM83_INSTRUCTION_IMPLEMENTATION(NOP,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    NOP, 
    SM83_INSTRUCTION_DECLARATION(NOP)
);

// *****

// 0x01: LD BC, n16
SM83_INSTRUCTION_IMPLEMENTATION(LDBC16,)

SM83_INSTRUCTION_IMPLEMENTATION(LDBC16_P2, 
    cpu->registers.C = cpu->bus->readMemoryU8(cpu->registers.PC);
)

SM83_INSTRUCTION_IMPLEMENTATION(LDBC16_P3, 
    cpu->registers.B = cpu->bus->readMemoryU8(cpu->registers.PC);
)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDBC16, 
    SM83_INSTRUCTION_DECLARATION(LDBC16), 
    SM83_INSTRUCTION_DECLARATION(LDBC16_P2),
    SM83_INSTRUCTION_DECLARATION(LDBC16_P3)
);

// *****

// 0x02: LD [BC], A
SM83_INSTRUCTION_IMPLEMENTATION(LDBCpA,)

SM83_INSTRUCTION_IMPLEMENTATION(LDBCpA_P2, 
    cpu->bus->writeMemoryU8(cpu->registers.BC, cpu->registers.A);
)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDBCpA, 
    SM83_INSTRUCTION_DECLARATION(LDBCpA),
    SM83_INSTRUCTION_DECLARATION(LDBCpA_P2),
);

// *****

// 0x03: INC BC
SM83_INSTRUCTION_IMPLEMENTATION(INCBC,)

SM83_INSTRUCTION_IMPLEMENTATION(INCBC_P2, 
    cpu->registers.BC++;
)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCBC,
    SM83_INSTRUCTION_DECLARATION(INCBC),
    SM83_INSTRUCTION_DECLARATION(INCBC_P2),
);

// *****

// 0x04: INC B
SM83_INSTRUCTION_IMPLEMENTATION(INCB,
    cpu->registers.F.C = IS_CARRY_SET_ADDITION_U8(cpu->registers.B, 1);
    cpu->registers.B++;

    cpu->registers.F.Z = (cpu->registers.B & 0xFF) == 0x00 ? 0 : 1;
    cpu->registers.F.N = 0;
)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCB,
    SM83_INSTRUCTION_DECLARATION(INCB)
);

// *****

// 0x05: DEC B
SM83_INSTRUCTION_IMPLEMENTATION(DECB,
    cpu->registers.F.C = IS_CARRY_SET_SUBSTRACTION_U8(cpu->registers.B, 1);
    cpu->registers.B--;

    cpu->registers.F.Z = (cpu->registers.B & 0xFF) == 0x00 ? 0 : 1;
    cpu->registers.F.N = 1;
)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECB,
    SM83_INSTRUCTION_DECLARATION(DECB)
);

// *****

// 0x06: LD B, n8
SM83_INSTRUCTION_IMPLEMENTATION(LDBN,)

SM83_INSTRUCTION_IMPLEMENTATION(LDBN_P2, 
    cpu->registers.B = cpu->bus->readMemoryU8(cpu->registers.PC);
)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDBN, 
    SM83_INSTRUCTION_DECLARATION(LDBN),
    SM83_INSTRUCTION_DECLARATION(LDBN_P2),
);

// *****

// 0x07: RLCA
SM83_INSTRUCTION_IMPLEMENTATION(RLCA,)

SM83_INSTRUCTION_IMPLEMENTATION(RLCA_P2,
    u16 shifted = (cpu->registers.A  << 1) | (cpu->registers.A >> 7);

    cpu->registers.F.Z = 0;
    cpu->registers.F.N = 0;
    cpu->registers.F.H = 0;
    cpu->registers.F.C = (cpu->registers.A & 0xF0) == 1;
    
    cpu->registers.A = shifted;
)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RLCA, 
    SM83_INSTRUCTION_DECLARATION(RLCA),
    SM83_INSTRUCTION_DECLARATION(RLCA_P2),
);

// *****

// 0x08: LD [a16], SP
SM83_INSTRUCTION_IMPLEMENTATION(LDASP16,)

SM83_INSTRUCTION_IMPLEMENTATION(LDASP16_P2,
    cpu->registers.C = cpu->bus->readMemoryU8(cpu->registers.PC);
)

SM83_INSTRUCTION_IMPLEMENTATION(LDASP16_P3,
    cpu->registers.C = cpu->bus->readMemoryU8(cpu->registers.PC);
)

SM83_INSTRUCTION_IMPLEMENTATION(LDASP16_P4,
    u16 shifted = (cpu->registers.A  << 1) | (cpu->registers.A >> 7);

    cpu->registers.F.Z = 0;
    cpu->registers.F.N = 0;
    cpu->registers.F.H = 0;
    cpu->registers.F.C = (cpu->registers.A & 0xF0) == 1;
    
    cpu->registers.A = shifted;
)

SM83_INSTRUCTION_IMPLEMENTATION(LDASP16_P5,
    u16 shifted = (cpu->registers.A  << 1) | (cpu->registers.A >> 7);

    cpu->registers.F.Z = 0;
    cpu->registers.F.N = 0;
    cpu->registers.F.H = 0;
    cpu->registers.F.C = (cpu->registers.A & 0xF0) == 1;
    
    cpu->registers.A = shifted;
)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDASP16, 
    SM83_INSTRUCTION_DECLARATION(LDASP16),
    SM83_INSTRUCTION_DECLARATION(LDASP16_P2),
    SM83_INSTRUCTION_DECLARATION(LDASP16_P3),
    SM83_INSTRUCTION_DECLARATION(LDASP16_P4),
    SM83_INSTRUCTION_DECLARATION(LDASP16_P5),
);

// *****

// 0x09: ADDHLBC
SM83_INSTRUCTION_IMPLEMENTATION(ADDHLBC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDHLBC, 
    SM83_INSTRUCTION_DECLARATION(ADDHLBC)
);

// *****

// 0x0A: DLABC
SM83_INSTRUCTION_IMPLEMENTATION(DLABCp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DLABCp, 
    SM83_INSTRUCTION_DECLARATION(DLABCp)
);

// *****

// 0x0B: DECBC
SM83_INSTRUCTION_IMPLEMENTATION(DECBC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECBC, 
    SM83_INSTRUCTION_DECLARATION(DECBC)
);

// *****

// 0x0C: INCC
SM83_INSTRUCTION_IMPLEMENTATION(INCC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCC, 
    SM83_INSTRUCTION_DECLARATION(INCC)
);

// *****

// 0x0D: DECC
SM83_INSTRUCTION_IMPLEMENTATION(DECC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECC, 
    SM83_INSTRUCTION_DECLARATION(DECC)
);

// *****

// 0x0E: LDC8
SM83_INSTRUCTION_IMPLEMENTATION(LDC8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDC8, 
    SM83_INSTRUCTION_DECLARATION(LDC8)
);

// *****

// 0x0F: RRCA
SM83_INSTRUCTION_IMPLEMENTATION(RRCA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RRCA, 
    SM83_INSTRUCTION_DECLARATION(RRCA)
);

// ******************************************************************************************************
// ************************************************ 0x10 ************************************************
// ******************************************************************************************************

// 0x10: STOP8
SM83_INSTRUCTION_IMPLEMENTATION(STOP8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    STOP8,
    SM83_INSTRUCTION_DECLARATION(STOP8)
);

// *****

// 0x11: LDDE16
SM83_INSTRUCTION_IMPLEMENTATION(LDDE16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDDE16,
    SM83_INSTRUCTION_DECLARATION(LDDE16)
);

// *****

// 0x12: LDDEE
SM83_INSTRUCTION_IMPLEMENTATION(LDDEE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDDEE,
    SM83_INSTRUCTION_DECLARATION(LDDEE)
);

// *****

// 0x13: INCDE
SM83_INSTRUCTION_IMPLEMENTATION(INCDE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCDE,
    SM83_INSTRUCTION_DECLARATION(INCDE)
);

// *****

// 0x14: INCD
SM83_INSTRUCTION_IMPLEMENTATION(INCD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCD,
    SM83_INSTRUCTION_DECLARATION(INCD)
);

// *****

// 0x15: DECD
SM83_INSTRUCTION_IMPLEMENTATION(DECD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECD,
    SM83_INSTRUCTION_DECLARATION(DECD)
);

// *****

// 0x16: LDD8
SM83_INSTRUCTION_IMPLEMENTATION(LDD8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDD8,
    SM83_INSTRUCTION_DECLARATION(LDD8)
);

// *****

// 0x17: RLA
SM83_INSTRUCTION_IMPLEMENTATION(RLA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RLA,
    SM83_INSTRUCTION_DECLARATION(RLA)
);

// *****

// 0x18: JR8
SM83_INSTRUCTION_IMPLEMENTATION(JR8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    JR8,
    SM83_INSTRUCTION_DECLARATION(JR8)
);

// *****

// 0x19: ADDHLDE
SM83_INSTRUCTION_IMPLEMENTATION(ADDHLDE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDHLDE,
    SM83_INSTRUCTION_DECLARATION(ADDHLDE)
);

// *****

// 0x1A: LDADE
SM83_INSTRUCTION_IMPLEMENTATION(LDADE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDADE,
    SM83_INSTRUCTION_DECLARATION(LDADE)
);

// *****

// 0x1B: DECDE
SM83_INSTRUCTION_IMPLEMENTATION(DECDE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECDE,
    SM83_INSTRUCTION_DECLARATION(DECDE)
);

// *****

// 0x1C: INCE
SM83_INSTRUCTION_IMPLEMENTATION(INCE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCE,
    SM83_INSTRUCTION_DECLARATION(INCE)
);

// *****

// 0x1D: DECE
SM83_INSTRUCTION_IMPLEMENTATION(DECE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECE,
    SM83_INSTRUCTION_DECLARATION(DECE)
);

// *****

// 0x1E: LDE8
SM83_INSTRUCTION_IMPLEMENTATION(LDE8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDE8,
    SM83_INSTRUCTION_DECLARATION(LDE8)
);

// *****

// 0x1F: RRA
SM83_INSTRUCTION_IMPLEMENTATION(RRA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RRA,
    SM83_INSTRUCTION_DECLARATION(RRA)
);

// ******************************************************************************************************
// ************************************************ 0x20 ************************************************
// ******************************************************************************************************

// 0x20: JRNZ8
SM83_INSTRUCTION_IMPLEMENTATION(JRNZ8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    JRNZ8,
    SM83_INSTRUCTION_DECLARATION(JRNZ8)
);

// *****

// 0x21: LDHL16
SM83_INSTRUCTION_IMPLEMENTATION(LDHL16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHL16,
    SM83_INSTRUCTION_DECLARATION(LDHL16)
);

// *****

// 0x22: LDHLA
SM83_INSTRUCTION_IMPLEMENTATION(LDHLA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHLA,
    SM83_INSTRUCTION_DECLARATION(LDHLA)
);

// *****

// 0x23: INCHL
SM83_INSTRUCTION_IMPLEMENTATION(INCHL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCHL,
    SM83_INSTRUCTION_DECLARATION(INCHL)
);

// *****

// 0x24: INCH
SM83_INSTRUCTION_IMPLEMENTATION(INCH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCH,
    SM83_INSTRUCTION_DECLARATION(INCH)
);

// *****

// 0x25: DECH
SM83_INSTRUCTION_IMPLEMENTATION(DECH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECH,
    SM83_INSTRUCTION_DECLARATION(DECH)
);

// *****

// 0x26: LDH8
SM83_INSTRUCTION_IMPLEMENTATION(LDH8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDH8,
    SM83_INSTRUCTION_DECLARATION(LDH8)
);

// *****

// 0x27: DAA
SM83_INSTRUCTION_IMPLEMENTATION(DAA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DAA,
    SM83_INSTRUCTION_DECLARATION(DAA)
);

// *****

// 0x28: JRZ8
SM83_INSTRUCTION_IMPLEMENTATION(JRZ8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    JRZ8,
    SM83_INSTRUCTION_DECLARATION(JRZ8)
);

// *****

// 0x29: ADDHLHL
SM83_INSTRUCTION_IMPLEMENTATION(ADDHLHL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDHLHL,
    SM83_INSTRUCTION_DECLARATION(ADDHLHL)
);

// *****

// 0x2A: LDAHLpp
SM83_INSTRUCTION_IMPLEMENTATION(LDAHLpp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDAHLpp,
    SM83_INSTRUCTION_DECLARATION(LDAHLpp)
);

// *****

// 0x2B: DECHL
SM83_INSTRUCTION_IMPLEMENTATION(DECHL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECHL,
    SM83_INSTRUCTION_DECLARATION(DECHL)
);

// *****

// 0x2C: INCL
SM83_INSTRUCTION_IMPLEMENTATION(INCL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCL,
    SM83_INSTRUCTION_DECLARATION(INCL)
);

// *****

// 0x2D: DECL
SM83_INSTRUCTION_IMPLEMENTATION(DECL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECL,
    SM83_INSTRUCTION_DECLARATION(DECL)
);

// *****

// 0x2E: LDL8
SM83_INSTRUCTION_IMPLEMENTATION(LDL8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDL8,
    SM83_INSTRUCTION_DECLARATION(LDL8)
);

// *****

// 0x2F: CPL
SM83_INSTRUCTION_IMPLEMENTATION(CPL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CPL,
    SM83_INSTRUCTION_DECLARATION(CPL)
);

// ******************************************************************************************************
// ************************************************ 0x30 ************************************************
// ******************************************************************************************************

// 0x30: JRNC8
SM83_INSTRUCTION_IMPLEMENTATION(JRNC8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    JRNC8,
    SM83_INSTRUCTION_DECLARATION(JRNC8)
);

// *****

// 0x31: LDSP16
SM83_INSTRUCTION_IMPLEMENTATION(LDSP16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDSP16,
    SM83_INSTRUCTION_DECLARATION(LDSP16)
);

// *****

// 0x32: LDLDA
SM83_INSTRUCTION_IMPLEMENTATION(LDLDA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDLDA,
    SM83_INSTRUCTION_DECLARATION(LDLDA)
);

// *****

// 0x33: INCSP
SM83_INSTRUCTION_IMPLEMENTATION(INCSP,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCSP,
    SM83_INSTRUCTION_DECLARATION(INCSP)
);

// *****

// 0x34: INCHLp
SM83_INSTRUCTION_IMPLEMENTATION(INCHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCHLp,
    SM83_INSTRUCTION_DECLARATION(INCHLp)
);

// *****

// 0x35: DECHLp
SM83_INSTRUCTION_IMPLEMENTATION(DECHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECHLp,
    SM83_INSTRUCTION_DECLARATION(DECHLp)
);

// *****

// 0x36: LDHL8
SM83_INSTRUCTION_IMPLEMENTATION(LDHL8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHL8,
    SM83_INSTRUCTION_DECLARATION(LDHL8)
);

// *****

// 0x37: SCF
SM83_INSTRUCTION_IMPLEMENTATION(SCF,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SCF,
    SM83_INSTRUCTION_DECLARATION(SCF)
);

// *****

// 0x38: JRC8
SM83_INSTRUCTION_IMPLEMENTATION(JRC8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    JRC8,
    SM83_INSTRUCTION_DECLARATION(JRC8)
);

// *****

// 0x39: ADDHLSP
SM83_INSTRUCTION_IMPLEMENTATION(ADDHLSP,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDHLSP,
    SM83_INSTRUCTION_DECLARATION(ADDHLSP)
);

// *****

// 0x3A: LDAHL
SM83_INSTRUCTION_IMPLEMENTATION(LDAHLpm,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDAHLpm,
    SM83_INSTRUCTION_DECLARATION(LDAHLpm)
);

// *****

// 0x3B: DECSP
SM83_INSTRUCTION_IMPLEMENTATION(DECSP,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECSP,
    SM83_INSTRUCTION_DECLARATION(DECSP)
);

// *****

// 0x3C: INCA
SM83_INSTRUCTION_IMPLEMENTATION(INCA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INCA,
    SM83_INSTRUCTION_DECLARATION(INCA)
);

// *****

// 0x3D: DECA
SM83_INSTRUCTION_IMPLEMENTATION(DECA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DECA,
    SM83_INSTRUCTION_DECLARATION(DECA)
);

// *****

// 0x3E: LDA8
SM83_INSTRUCTION_IMPLEMENTATION(LDA8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDA8,
    SM83_INSTRUCTION_DECLARATION(LDA8)
);

// *****

// 0x3F: CCF
SM83_INSTRUCTION_IMPLEMENTATION(CCF,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CCF,
    SM83_INSTRUCTION_DECLARATION(CCF)
);

// ******************************************************************************************************
// ************************************************ 0x40 ************************************************
// ******************************************************************************************************

// 0x40: LDBB
SM83_INSTRUCTION_IMPLEMENTATION(LDBB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDBB,
    SM83_INSTRUCTION_DECLARATION(LDBB)
);

// *****

// 0x41: LDBC
SM83_INSTRUCTION_IMPLEMENTATION(LDBC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDBC,
    SM83_INSTRUCTION_DECLARATION(LDBC)
);

// *****

// 0x42: LDBD
SM83_INSTRUCTION_IMPLEMENTATION(LDBD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDBD,
    SM83_INSTRUCTION_DECLARATION(LDBD)
);

// *****

// 0x43: LDBE
SM83_INSTRUCTION_IMPLEMENTATION(LDBE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDBE,
    SM83_INSTRUCTION_DECLARATION(LDBE)
);

// *****

// 0x44: LDBH
SM83_INSTRUCTION_IMPLEMENTATION(LDBH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDBH,
    SM83_INSTRUCTION_DECLARATION(LDBH)
);

// *****

// 0x45: LDBL
SM83_INSTRUCTION_IMPLEMENTATION(LDBL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDBL,
    SM83_INSTRUCTION_DECLARATION(LDBL)
);

// *****

// 0x46: LDBHLp
SM83_INSTRUCTION_IMPLEMENTATION(LDBHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDBHLp,
    SM83_INSTRUCTION_DECLARATION(LDBHLp)
);

// *****

// 0x47: LDBA
SM83_INSTRUCTION_IMPLEMENTATION(LDBA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDBA,
    SM83_INSTRUCTION_DECLARATION(LDBA)
);

// *****

// 0x48: LDCB
SM83_INSTRUCTION_IMPLEMENTATION(LDCB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDCB,
    SM83_INSTRUCTION_DECLARATION(LDCB)
);

// *****

// 0x49: LDCC
SM83_INSTRUCTION_IMPLEMENTATION(LDCC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDCC,
    SM83_INSTRUCTION_DECLARATION(LDCC)
);

// *****

// 0x4A: LDCD
SM83_INSTRUCTION_IMPLEMENTATION(LDCD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDCD,
    SM83_INSTRUCTION_DECLARATION(LDCD)
);

// *****

// 0x4B: LDCE
SM83_INSTRUCTION_IMPLEMENTATION(LDCE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDCE,
    SM83_INSTRUCTION_DECLARATION(LDCE)
);

// *****

// 0x4C: LDCH
SM83_INSTRUCTION_IMPLEMENTATION(LDCH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDCH,
    SM83_INSTRUCTION_DECLARATION(LDCH)
);

// *****

// 0x4D: LDCL
SM83_INSTRUCTION_IMPLEMENTATION(LDCL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDCL,
    SM83_INSTRUCTION_DECLARATION(LDCL)
);

// *****

// 0x4E: LDCHLp
SM83_INSTRUCTION_IMPLEMENTATION(LDCHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDCHLp,
    SM83_INSTRUCTION_DECLARATION(LDCHLp)
);

// *****

// 0x4F: LDCA
SM83_INSTRUCTION_IMPLEMENTATION(LDCA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDCA,
    SM83_INSTRUCTION_DECLARATION(LDCA)
);

// ******************************************************************************************************
// ************************************************ 0x50 ************************************************
// ******************************************************************************************************

// 0x50: LDDB
SM83_INSTRUCTION_IMPLEMENTATION(LDDB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDDB,
    SM83_INSTRUCTION_DECLARATION(LDDB)
);

// *****

// 0x51: LDDC
SM83_INSTRUCTION_IMPLEMENTATION(LDDC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDDC,
    SM83_INSTRUCTION_DECLARATION(LDDC)
);

// *****

// 0x52: LDDD
SM83_INSTRUCTION_IMPLEMENTATION(LDDD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDDD,
    SM83_INSTRUCTION_DECLARATION(LDDD)
);

// *****

// 0x53: LDDE
SM83_INSTRUCTION_IMPLEMENTATION(LDDE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDDE,
    SM83_INSTRUCTION_DECLARATION(LDDE)
);

// *****

// 0x54: LDDH
SM83_INSTRUCTION_IMPLEMENTATION(LDDH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDDH,
    SM83_INSTRUCTION_DECLARATION(LDDH)
);

// *****

// 0x55: LDDL
SM83_INSTRUCTION_IMPLEMENTATION(LDDL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDDL,
    SM83_INSTRUCTION_DECLARATION(LDDL)
);

// *****

// 0x56: LDDHLp
SM83_INSTRUCTION_IMPLEMENTATION(LDDHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDDHLp,
    SM83_INSTRUCTION_DECLARATION(LDDHLp)
);

// *****

// 0x57: LDDA
SM83_INSTRUCTION_IMPLEMENTATION(LDDA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDDA,
    SM83_INSTRUCTION_DECLARATION(LDDA)
);

// *****

// 0x58: LDEB
SM83_INSTRUCTION_IMPLEMENTATION(LDEB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDEB,
    SM83_INSTRUCTION_DECLARATION(LDEB)
);

// *****

// 0x59: LDEC
SM83_INSTRUCTION_IMPLEMENTATION(LDEC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDEC,
    SM83_INSTRUCTION_DECLARATION(LDEC)
);

// *****

// 0x5A: LDED
SM83_INSTRUCTION_IMPLEMENTATION(LDED,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDED,
    SM83_INSTRUCTION_DECLARATION(LDED)
);

// *****

// 0x5B: LDEE
SM83_INSTRUCTION_IMPLEMENTATION(LDEE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDEE,
    SM83_INSTRUCTION_DECLARATION(LDEE)
);

// *****

// 0x5C: LDEH
SM83_INSTRUCTION_IMPLEMENTATION(LDEH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDEH,
    SM83_INSTRUCTION_DECLARATION(LDEH)
);

// *****

// 0x5D: LDEL
SM83_INSTRUCTION_IMPLEMENTATION(LDEL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDEL,
    SM83_INSTRUCTION_DECLARATION(LDEL)
);

// *****

// 0x5E: LDEHLp
SM83_INSTRUCTION_IMPLEMENTATION(LDEHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDEHLp,
    SM83_INSTRUCTION_DECLARATION(LDEHLp)
);

// *****

// 0x5F: LDEA
SM83_INSTRUCTION_IMPLEMENTATION(LDEA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDEA,
    SM83_INSTRUCTION_DECLARATION(LDEA)
);

// ******************************************************************************************************
// ************************************************ 0x60 ************************************************
// ******************************************************************************************************

// 0x60: LDHB
SM83_INSTRUCTION_IMPLEMENTATION(LDHB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHB,
    SM83_INSTRUCTION_DECLARATION(LDHB)
);

// *****

// 0x61: LDHC
SM83_INSTRUCTION_IMPLEMENTATION(LDHC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHC,
    SM83_INSTRUCTION_DECLARATION(LDHC)
);

// *****

// 0x62: LDHD
SM83_INSTRUCTION_IMPLEMENTATION(LDHD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHD,
    SM83_INSTRUCTION_DECLARATION(LDHD)
);

// *****

// 0x63: LDHE
SM83_INSTRUCTION_IMPLEMENTATION(LDHE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHE,
    SM83_INSTRUCTION_DECLARATION(LDHE)
);

// *****

// 0x64: LDHH
SM83_INSTRUCTION_IMPLEMENTATION(LDHH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHH,
    SM83_INSTRUCTION_DECLARATION(LDHH)
);

// *****

// 0x65: LDHL
SM83_INSTRUCTION_IMPLEMENTATION(LDHL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHL,
    SM83_INSTRUCTION_DECLARATION(LDHL)
);

// *****

// 0x66: LDHHLp
SM83_INSTRUCTION_IMPLEMENTATION(LDHHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHHLp,
    SM83_INSTRUCTION_DECLARATION(LDHHLp)
);

// *****

// 0x67: LDHA
SM83_INSTRUCTION_IMPLEMENTATION(LDHA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHA,
    SM83_INSTRUCTION_DECLARATION(LDHA)
);

// *****

// 0x68: LDLB
SM83_INSTRUCTION_IMPLEMENTATION(LDLB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDLB,
    SM83_INSTRUCTION_DECLARATION(LDLB)
);

// *****

// 0x69: LDLC
SM83_INSTRUCTION_IMPLEMENTATION(LDLC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDLC,
    SM83_INSTRUCTION_DECLARATION(LDLC)
);

// *****

// 0x6A: LDLD
SM83_INSTRUCTION_IMPLEMENTATION(LDLD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDLD,
    SM83_INSTRUCTION_DECLARATION(LDLD)
);

// *****

// 0x6B: LDLE
SM83_INSTRUCTION_IMPLEMENTATION(LDLE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDLE,
    SM83_INSTRUCTION_DECLARATION(LDLE)
);

// *****

// 0x6C: LDLH
SM83_INSTRUCTION_IMPLEMENTATION(LDLH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDLH,
    SM83_INSTRUCTION_DECLARATION(LDLH)
);

// *****

// 0x6D: LDLL
SM83_INSTRUCTION_IMPLEMENTATION(LDLL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDLL,
    SM83_INSTRUCTION_DECLARATION(LDLL)
);

// *****

// 0x6E: LDLHLp
SM83_INSTRUCTION_IMPLEMENTATION(LDLHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDLHLp,
    SM83_INSTRUCTION_DECLARATION(LDLHLp)
);

// *****

// 0x6F: LDLA
SM83_INSTRUCTION_IMPLEMENTATION(LDLA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDLA,
    SM83_INSTRUCTION_DECLARATION(LDLA)
);

// ******************************************************************************************************
// ************************************************ 0x70 ************************************************
// ******************************************************************************************************

// 0x70: LDHLpB
SM83_INSTRUCTION_IMPLEMENTATION(LDHLpB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHLpB,
    SM83_INSTRUCTION_DECLARATION(LDHLpB)
);

// *****

// 0x71: LDHLpC
SM83_INSTRUCTION_IMPLEMENTATION(LDHLpC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHLpC,
    SM83_INSTRUCTION_DECLARATION(LDHLpC)
);

// *****

// 0x72: LDHLpD
SM83_INSTRUCTION_IMPLEMENTATION(LDHLpD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHLpD,
    SM83_INSTRUCTION_DECLARATION(LDHLpD)
);

// *****

// 0x73: LDHLpE
SM83_INSTRUCTION_IMPLEMENTATION(LDHLpE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHLpE,
    SM83_INSTRUCTION_DECLARATION(LDHLpE)
);

// *****

// 0x74: LDHLpH
SM83_INSTRUCTION_IMPLEMENTATION(LDHLpH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHLpH,
    SM83_INSTRUCTION_DECLARATION(LDHLpH)
);

// *****

// 0x75: LDHLpL
SM83_INSTRUCTION_IMPLEMENTATION(LDHLpL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHLpL,
    SM83_INSTRUCTION_DECLARATION(LDHLpL)
);

// *****

// 0x76: HALT
SM83_INSTRUCTION_IMPLEMENTATION(HALT,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    HALT,
    SM83_INSTRUCTION_DECLARATION(HALT)
);

// *****

// 0x77: LDHLpA
SM83_INSTRUCTION_IMPLEMENTATION(LDHLpA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHLpA,
    SM83_INSTRUCTION_DECLARATION(LDHLpA)
);

// *****

// 0x78: LDAB
SM83_INSTRUCTION_IMPLEMENTATION(LDAB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDAB,
    SM83_INSTRUCTION_DECLARATION(LDAB)
);

// *****

// 0x79: LDAC
SM83_INSTRUCTION_IMPLEMENTATION(LDAC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDAC,
    SM83_INSTRUCTION_DECLARATION(LDAC)
);

// *****

// 0x7A: LDAD
SM83_INSTRUCTION_IMPLEMENTATION(LDAD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDAD,
    SM83_INSTRUCTION_DECLARATION(LDAD)
);

// *****

// 0x7B: LDAE
SM83_INSTRUCTION_IMPLEMENTATION(LDAE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDAE,
    SM83_INSTRUCTION_DECLARATION(LDAE)
);

// *****

// 0x7C: LDAH
SM83_INSTRUCTION_IMPLEMENTATION(LDAH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDAH,
    SM83_INSTRUCTION_DECLARATION(LDAH)
);

// *****

// 0x7D: LDAL
SM83_INSTRUCTION_IMPLEMENTATION(LDAL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDAL,
    SM83_INSTRUCTION_DECLARATION(LDAL)
);

// *****

// 0x7E: LDAHLp
SM83_INSTRUCTION_IMPLEMENTATION(LDAHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDAHLp,
    SM83_INSTRUCTION_DECLARATION(LDAHLp)
);

// *****

// 0x7F: LDAA
SM83_INSTRUCTION_IMPLEMENTATION(LDAA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDAA,
    SM83_INSTRUCTION_DECLARATION(LDAA)
);

// ******************************************************************************************************
// ************************************************ 0x80 ************************************************
// ******************************************************************************************************

// 0x80: ADDAB
SM83_INSTRUCTION_IMPLEMENTATION(ADDAB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDAB,
    SM83_INSTRUCTION_DECLARATION(ADDAB)
);

// *****

// 0x81: ADDAC
SM83_INSTRUCTION_IMPLEMENTATION(ADDAC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDAC,
    SM83_INSTRUCTION_DECLARATION(ADDAC)
);

// *****

// 0x82: ADDAD
SM83_INSTRUCTION_IMPLEMENTATION(ADDAD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDAD,
    SM83_INSTRUCTION_DECLARATION(ADDAD)
);

// *****

// 0x83: ADDAE
SM83_INSTRUCTION_IMPLEMENTATION(ADDAE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDAE,
    SM83_INSTRUCTION_DECLARATION(ADDAE)
);

// *****

// 0x84: ADDAH
SM83_INSTRUCTION_IMPLEMENTATION(ADDAH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDAH,
    SM83_INSTRUCTION_DECLARATION(ADDAH)
);

// *****

// 0x85: ADDAL
SM83_INSTRUCTION_IMPLEMENTATION(ADDAL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDAL,
    SM83_INSTRUCTION_DECLARATION(ADDAL)
);

// *****

// 0x86: ADDAHLp
SM83_INSTRUCTION_IMPLEMENTATION(ADDAHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDAHLp,
    SM83_INSTRUCTION_DECLARATION(ADDAHLp)
);

// *****

// 0x87: ADDAA
SM83_INSTRUCTION_IMPLEMENTATION(ADDAA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDAA,
    SM83_INSTRUCTION_DECLARATION(ADDAA)
);

// *****

// 0x88: ADCAB
SM83_INSTRUCTION_IMPLEMENTATION(ADCAB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADCAB,
    SM83_INSTRUCTION_DECLARATION(ADCAB)
);

// *****

// 0x89: ADCAC
SM83_INSTRUCTION_IMPLEMENTATION(ADCAC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADCAC,
    SM83_INSTRUCTION_DECLARATION(ADCAC)
);

// *****

// 0x8A: ADCAD
SM83_INSTRUCTION_IMPLEMENTATION(ADCAD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADCAD,
    SM83_INSTRUCTION_DECLARATION(ADCAD)
);

// *****

// 0x8B: ADCAE
SM83_INSTRUCTION_IMPLEMENTATION(ADCAE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADCAE,
    SM83_INSTRUCTION_DECLARATION(ADCAE)
);

// *****

// 0x8C: ADCAH
SM83_INSTRUCTION_IMPLEMENTATION(ADCAH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADCAH,
    SM83_INSTRUCTION_DECLARATION(ADCAH)
);

// *****

// 0x8D: ADCAL
SM83_INSTRUCTION_IMPLEMENTATION(ADCAL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADCAL,
    SM83_INSTRUCTION_DECLARATION(ADCAL)
);

// *****

// 0x8E: ADCAHLp
SM83_INSTRUCTION_IMPLEMENTATION(ADCAHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADCAHLp,
    SM83_INSTRUCTION_DECLARATION(ADCAHLp)
);

// *****

// 0x8F: ADCAA
SM83_INSTRUCTION_IMPLEMENTATION(ADCAA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADCAA,
    SM83_INSTRUCTION_DECLARATION(ADCAA)
);

// ******************************************************************************************************
// ************************************************ 0x90 ************************************************
// ******************************************************************************************************

// 0x90: SUBAB
SM83_INSTRUCTION_IMPLEMENTATION(SUBAB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SUBAB,
    SM83_INSTRUCTION_DECLARATION(SUBAB)
);

// *****

// 0x91: SUBAC
SM83_INSTRUCTION_IMPLEMENTATION(SUBAC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SUBAC,
    SM83_INSTRUCTION_DECLARATION(SUBAC)
);

// *****

// 0x92: SUBAD
SM83_INSTRUCTION_IMPLEMENTATION(SUBAD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SUBAD,
    SM83_INSTRUCTION_DECLARATION(SUBAD)
);

// *****

// 0x93: SUBAE
SM83_INSTRUCTION_IMPLEMENTATION(SUBAE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SUBAE,
    SM83_INSTRUCTION_DECLARATION(SUBAE)
);

// *****

// 0x94: SUBAH
SM83_INSTRUCTION_IMPLEMENTATION(SUBAH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SUBAH,
    SM83_INSTRUCTION_DECLARATION(SUBAH)
);

// *****

// 0x95: SUBAL
SM83_INSTRUCTION_IMPLEMENTATION(SUBAL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SUBAL,
    SM83_INSTRUCTION_DECLARATION(SUBAL)
);

// *****

// 0x96: SUBAHLp
SM83_INSTRUCTION_IMPLEMENTATION(SUBAHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SUBAHLp,
    SM83_INSTRUCTION_DECLARATION(SUBAHLp)
);

// *****

// 0x97: SUBAA
SM83_INSTRUCTION_IMPLEMENTATION(SUBAA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SUBAA,
    SM83_INSTRUCTION_DECLARATION(SUBAA)
);

// *****

// 0x98: SBCAB
SM83_INSTRUCTION_IMPLEMENTATION(SBCAB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SBCAB,
    SM83_INSTRUCTION_DECLARATION(SBCAB)
);

// *****

// 0x99: SBCAC
SM83_INSTRUCTION_IMPLEMENTATION(SBCAC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SBCAC,
    SM83_INSTRUCTION_DECLARATION(SBCAC)
);

// *****

// 0x9A: SBCAD
SM83_INSTRUCTION_IMPLEMENTATION(SBCAD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SBCAD,
    SM83_INSTRUCTION_DECLARATION(SBCAD)
);

// *****

// 0x9B: SBCAE
SM83_INSTRUCTION_IMPLEMENTATION(SBCAE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SBCAE,
    SM83_INSTRUCTION_DECLARATION(SBCAE)
);

// *****

// 0x9C: SBCAH
SM83_INSTRUCTION_IMPLEMENTATION(SBCAH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SBCAH,
    SM83_INSTRUCTION_DECLARATION(SBCAH)
);

// *****

// 0x9D: SBCAL
SM83_INSTRUCTION_IMPLEMENTATION(SBCAL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SBCAL,
    SM83_INSTRUCTION_DECLARATION(SBCAL)
);

// *****

// 0x9E: SBCAHLp
SM83_INSTRUCTION_IMPLEMENTATION(SBCAHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SBCAHLp,
    SM83_INSTRUCTION_DECLARATION(SBCAHLp)
);

// *****

// 0x9F: SBCAA
SM83_INSTRUCTION_IMPLEMENTATION(SBCAA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SBCAA,
    SM83_INSTRUCTION_DECLARATION(SBCAA)
);

// ******************************************************************************************************
// ************************************************ 0xA0 ************************************************
// ******************************************************************************************************

// 0xA0: ANDAB
SM83_INSTRUCTION_IMPLEMENTATION(ANDAB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ANDAB,
    SM83_INSTRUCTION_DECLARATION(ANDAB)
);

// *****

// 0xA1: ANDAC
SM83_INSTRUCTION_IMPLEMENTATION(ANDAC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ANDAC,
    SM83_INSTRUCTION_DECLARATION(ANDAC)
);

// *****

// 0xA2: ANDAD
SM83_INSTRUCTION_IMPLEMENTATION(ANDAD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ANDAD,
    SM83_INSTRUCTION_DECLARATION(ANDAD)
);

// *****

// 0xA3: ANDAE
SM83_INSTRUCTION_IMPLEMENTATION(ANDAE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ANDAE,
    SM83_INSTRUCTION_DECLARATION(ANDAE)
);

// *****

// 0xA4: ANDAH
SM83_INSTRUCTION_IMPLEMENTATION(ANDAH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ANDAH,
    SM83_INSTRUCTION_DECLARATION(ANDAH)
);

// *****

// 0xA5: ANDAL
SM83_INSTRUCTION_IMPLEMENTATION(ANDAL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ANDAL,
    SM83_INSTRUCTION_DECLARATION(ANDAL)
);

// *****

// 0xA6: ANDAHLp
SM83_INSTRUCTION_IMPLEMENTATION(ANDAHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ANDAHLp,
    SM83_INSTRUCTION_DECLARATION(ANDAHLp)
);

// *****

// 0xA7: ANDAA
SM83_INSTRUCTION_IMPLEMENTATION(ANDAA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ANDAA,
    SM83_INSTRUCTION_DECLARATION(ANDAA)
);

// *****

// 0xA8: XORAB
SM83_INSTRUCTION_IMPLEMENTATION(XORAB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    XORAB,
    SM83_INSTRUCTION_DECLARATION(XORAB)
);

// *****

// 0xA9: XORAC
SM83_INSTRUCTION_IMPLEMENTATION(XORAC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    XORAC,
    SM83_INSTRUCTION_DECLARATION(XORAC)
);

// *****

// 0xAA: XORAD
SM83_INSTRUCTION_IMPLEMENTATION(XORAD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    XORAD,
    SM83_INSTRUCTION_DECLARATION(XORAD)
);

// *****

// 0xAB: XORAE
SM83_INSTRUCTION_IMPLEMENTATION(XORAE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    XORAE,
    SM83_INSTRUCTION_DECLARATION(XORAE)
);

// *****

// 0xAC: XORAH
SM83_INSTRUCTION_IMPLEMENTATION(XORAH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    XORAH,
    SM83_INSTRUCTION_DECLARATION(XORAH)
);

// *****

// 0xAD: XORAL
SM83_INSTRUCTION_IMPLEMENTATION(XORAL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    XORAL,
    SM83_INSTRUCTION_DECLARATION(XORAL)
);

// *****

// 0xAE: XORAHLp
SM83_INSTRUCTION_IMPLEMENTATION(XORAHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    XORAHLp,
    SM83_INSTRUCTION_DECLARATION(XORAHLp)
);

// *****

// 0xAF: XORAA
SM83_INSTRUCTION_IMPLEMENTATION(XORAA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    XORAA,
    SM83_INSTRUCTION_DECLARATION(XORAA)
);

// ******************************************************************************************************
// ************************************************ 0xB0 ************************************************
// ******************************************************************************************************

// 0xB0: ORAB
SM83_INSTRUCTION_IMPLEMENTATION(ORAB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ORAB,
    SM83_INSTRUCTION_DECLARATION(ORAB)
);

// *****

// 0xB1: ORAC
SM83_INSTRUCTION_IMPLEMENTATION(ORAC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ORAC,
    SM83_INSTRUCTION_DECLARATION(ORAC)
);

// *****

// 0xB2: ORAD
SM83_INSTRUCTION_IMPLEMENTATION(ORAD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ORAD,
    SM83_INSTRUCTION_DECLARATION(ORAD)
);

// *****

// 0xB3: ORAE
SM83_INSTRUCTION_IMPLEMENTATION(ORAE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ORAE,
    SM83_INSTRUCTION_DECLARATION(ORAE)
);

// *****

// 0xB4: ORAH
SM83_INSTRUCTION_IMPLEMENTATION(ORAH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ORAH,
    SM83_INSTRUCTION_DECLARATION(ORAH)
);

// *****

// 0xB5: ORAL
SM83_INSTRUCTION_IMPLEMENTATION(ORAL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ORAL,
    SM83_INSTRUCTION_DECLARATION(ORAL)
);

// *****

// 0xB6: ORAHLp
SM83_INSTRUCTION_IMPLEMENTATION(ORAHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ORAHLp,
    SM83_INSTRUCTION_DECLARATION(ORAHLp)
);

// *****

// 0xB7: ORAA
SM83_INSTRUCTION_IMPLEMENTATION(ORAA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ORAA,
    SM83_INSTRUCTION_DECLARATION(ORAA)
);

// *****

// 0xB8: CPAB
SM83_INSTRUCTION_IMPLEMENTATION(CPAB,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CPAB,
    SM83_INSTRUCTION_DECLARATION(CPAB)
);

// *****

// 0xB9: CPAC
SM83_INSTRUCTION_IMPLEMENTATION(CPAC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CPAC,
    SM83_INSTRUCTION_DECLARATION(CPAC)
);

// *****

// 0xBA: CPAD
SM83_INSTRUCTION_IMPLEMENTATION(CPAD,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CPAD,
    SM83_INSTRUCTION_DECLARATION(CPAD)
);

// *****

// 0xBB: CPAE
SM83_INSTRUCTION_IMPLEMENTATION(CPAE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CPAE,
    SM83_INSTRUCTION_DECLARATION(CPAE)
);

// *****

// 0xBC: CPAH
SM83_INSTRUCTION_IMPLEMENTATION(CPAH,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CPAH,
    SM83_INSTRUCTION_DECLARATION(CPAH)
);

// *****

// 0xBD: CPAL
SM83_INSTRUCTION_IMPLEMENTATION(CPAL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CPAL,
    SM83_INSTRUCTION_DECLARATION(CPAL)
);

// *****

// 0xBE: CPAHLp
SM83_INSTRUCTION_IMPLEMENTATION(CPAHLp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CPAHLp,
    SM83_INSTRUCTION_DECLARATION(CPAHLp)
);

// *****

// 0xBF: CPAA
SM83_INSTRUCTION_IMPLEMENTATION(CPAA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CPAA,
    SM83_INSTRUCTION_DECLARATION(CPAA)
);

// ******************************************************************************************************
// ************************************************ 0xC0 ************************************************
// ******************************************************************************************************

// 0xC0: RET NZ
SM83_INSTRUCTION_IMPLEMENTATION(RETNZ,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RETNZ,
    SM83_INSTRUCTION_DECLARATION(RETNZ)
);

// 0xC1: POP BC
SM83_INSTRUCTION_IMPLEMENTATION(POPBC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    POPBC,
    SM83_INSTRUCTION_DECLARATION(POPBC)
);

// 0xC2: JR NZ, a16
SM83_INSTRUCTION_IMPLEMENTATION(JRNZ16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    JRNZ16,
    SM83_INSTRUCTION_DECLARATION(JRNZ16)
);

// 0xC3: JP a16
SM83_INSTRUCTION_IMPLEMENTATION(JP16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    JP16,
    SM83_INSTRUCTION_DECLARATION(JP16)
);

// 0xC4: CALL NZ, a16
SM83_INSTRUCTION_IMPLEMENTATION(CALLNZ16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CALLNZ16,
    SM83_INSTRUCTION_DECLARATION(CALLNZ16)
);

// 0xC5: PUSH BC
SM83_INSTRUCTION_IMPLEMENTATION(PUSHBC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    PUSHBC,
    SM83_INSTRUCTION_DECLARATION(PUSHBC)
);

// 0xC6: ADD A, n8
SM83_INSTRUCTION_IMPLEMENTATION(ADDA8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDA8,
    SM83_INSTRUCTION_DECLARATION(ADDA8)
);

// 0xC7: RST $00
SM83_INSTRUCTION_IMPLEMENTATION(RST00,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RST00,
    SM83_INSTRUCTION_DECLARATION(RST00)
);

// 0xC8: RET Z
SM83_INSTRUCTION_IMPLEMENTATION(RETZ,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RETZ,
    SM83_INSTRUCTION_DECLARATION(RETZ)
);

// 0xC9: RET
SM83_INSTRUCTION_IMPLEMENTATION(RET,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RET,
    SM83_INSTRUCTION_DECLARATION(RET)
);

// 0xCA: JP Z, a16
SM83_INSTRUCTION_IMPLEMENTATION(JPZ16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    JPZ16,
    SM83_INSTRUCTION_DECLARATION(JPZ16)
);

// 0xCB: PREFIX
SM83_INSTRUCTION_IMPLEMENTATION(PREFIX,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    PREFIX,
    SM83_INSTRUCTION_DECLARATION(PREFIX)
);

// 0xCC: CALL Z, a16
SM83_INSTRUCTION_IMPLEMENTATION(CALLZ16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CALLZ16,
    SM83_INSTRUCTION_DECLARATION(CALLZ16)
);

// 0xCD: CALL a16
SM83_INSTRUCTION_IMPLEMENTATION(CALL16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CALL16,
    SM83_INSTRUCTION_DECLARATION(CALL16)
);

// 0xCE: ADC A, n8
SM83_INSTRUCTION_IMPLEMENTATION(ADCA8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADCA8,
    SM83_INSTRUCTION_DECLARATION(ADCA8)
);

// 0xCF: RST $08
SM83_INSTRUCTION_IMPLEMENTATION(RST08,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RST08,
    SM83_INSTRUCTION_DECLARATION(RST08)
);

// ******************************************************************************************************
// ************************************************ 0xD0 ************************************************
// ******************************************************************************************************

// 0xD0: RET NC
SM83_INSTRUCTION_IMPLEMENTATION(RETNC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RETNC,
    SM83_INSTRUCTION_DECLARATION(RETNC)
);

// 0xD1: POP DE
SM83_INSTRUCTION_IMPLEMENTATION(POPDE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    POPDE,
    SM83_INSTRUCTION_DECLARATION(POPDE)
);

// 0xD2: JR NC, a16
SM83_INSTRUCTION_IMPLEMENTATION(JRNC16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    JRNC16,
    SM83_INSTRUCTION_DECLARATION(JRNC16)
);

// 0xD4: CALL NC, a16
SM83_INSTRUCTION_IMPLEMENTATION(CALLNC16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CALLNC16,
    SM83_INSTRUCTION_DECLARATION(CALLNC16)
);

// 0xD5: PUSH DE
SM83_INSTRUCTION_IMPLEMENTATION(PUSHDE,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    PUSHDE,
    SM83_INSTRUCTION_DECLARATION(PUSHDE)
);

// 0xD6: SUB A, n8
SM83_INSTRUCTION_IMPLEMENTATION(SUBA8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SUBA8,
    SM83_INSTRUCTION_DECLARATION(SUBA8)
);

// 0xD7: RST $10
SM83_INSTRUCTION_IMPLEMENTATION(RST10,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RST10,
    SM83_INSTRUCTION_DECLARATION(RST10)
);

// 0xD8: RET C
SM83_INSTRUCTION_IMPLEMENTATION(RETC,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RETC,
    SM83_INSTRUCTION_DECLARATION(RETC)
);

// 0xD9: RETI
SM83_INSTRUCTION_IMPLEMENTATION(RETI,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RETI,
    SM83_INSTRUCTION_DECLARATION(RETI)
);

// 0xDA: JP C, a16
SM83_INSTRUCTION_IMPLEMENTATION(JPC16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    JPC16,
    SM83_INSTRUCTION_DECLARATION(JPC16)
);

// 0xDC: CALL C, a16
SM83_INSTRUCTION_IMPLEMENTATION(CALLC16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CALLC16,
    SM83_INSTRUCTION_DECLARATION(CALLC16)
);

// 0xDE: SBC A, n8
SM83_INSTRUCTION_IMPLEMENTATION(SBCA8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    SBCA8,
    SM83_INSTRUCTION_DECLARATION(SBCA8)
);

// 0xDF: RST $18
SM83_INSTRUCTION_IMPLEMENTATION(RST18,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RST18,
    SM83_INSTRUCTION_DECLARATION(RST18)
);

// ******************************************************************************************************
// ************************************************ 0xE0 ************************************************
// ******************************************************************************************************

// 0xE0: LDH [a8], A
SM83_INSTRUCTION_IMPLEMENTATION(LDH8A,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDH8A,
    SM83_INSTRUCTION_DECLARATION(LDH8A)
);

// 0xE1: POP HL
SM83_INSTRUCTION_IMPLEMENTATION(POPHL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    POPHL,
    SM83_INSTRUCTION_DECLARATION(POPHL)
);

// 0xE2: LD [C], A
SM83_INSTRUCTION_IMPLEMENTATION(LDCpA,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDCpA,
    SM83_INSTRUCTION_DECLARATION(LDCpA)
);

// 0xE5: PUSH HL
SM83_INSTRUCTION_IMPLEMENTATION(PUSHHL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    PUSHHL,
    SM83_INSTRUCTION_DECLARATION(PUSHHL)
);

// 0xE6: AND A, n8
SM83_INSTRUCTION_IMPLEMENTATION(ANDA8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ANDA8,
    SM83_INSTRUCTION_DECLARATION(ANDA8)
);

// 0xE7: RST $20
SM83_INSTRUCTION_IMPLEMENTATION(RST20,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RST20,
    SM83_INSTRUCTION_DECLARATION(RST20)
);

// 0xE8: ADD SP, e8
SM83_INSTRUCTION_IMPLEMENTATION(ADDSP8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ADDSP8,
    SM83_INSTRUCTION_DECLARATION(ADDSP8)
);

// 0xE9: JP HL
SM83_INSTRUCTION_IMPLEMENTATION(JPHL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    JPHL,
    SM83_INSTRUCTION_DECLARATION(JPHL)
);

// 0xEA: LD [a16], A
SM83_INSTRUCTION_IMPLEMENTATION(LD16A,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LD16A,
    SM83_INSTRUCTION_DECLARATION(LD16A)
);

// 0xEE: XOR A, n8
SM83_INSTRUCTION_IMPLEMENTATION(XORA8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    XORA8,
    SM83_INSTRUCTION_DECLARATION(XORA8)
);

// 0xEF: RST $28
SM83_INSTRUCTION_IMPLEMENTATION(RST28,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RST28,
    SM83_INSTRUCTION_DECLARATION(RST28)
);

// ******************************************************************************************************
// ************************************************ 0xF0 ************************************************
// ******************************************************************************************************

// 0xF0: LDH A, [a8]
SM83_INSTRUCTION_IMPLEMENTATION(LDHA8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHA8,
    SM83_INSTRUCTION_DECLARATION(LDHA8)
);

// 0xF1: POP AF
SM83_INSTRUCTION_IMPLEMENTATION(POPAF,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    POPAF,
    SM83_INSTRUCTION_DECLARATION(POPAF)
);

// 0xF2: LD A, [C]
SM83_INSTRUCTION_IMPLEMENTATION(LDACp,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDACp,
    SM83_INSTRUCTION_DECLARATION(LDACp)
);

// 0xF3: DI
SM83_INSTRUCTION_IMPLEMENTATION(DI,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    DI,
    SM83_INSTRUCTION_DECLARATION(DI)
);

// 0xF5: PUSH AF
SM83_INSTRUCTION_IMPLEMENTATION(PUSHAF,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    PUSHAF,
    SM83_INSTRUCTION_DECLARATION(PUSHAF)
);

// 0xF6: OR A, n8
SM83_INSTRUCTION_IMPLEMENTATION(ORA8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    ORA8,
    SM83_INSTRUCTION_DECLARATION(ORA8)
);

// 0xF7: RST $30
SM83_INSTRUCTION_IMPLEMENTATION(RST30,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RST30,
    SM83_INSTRUCTION_DECLARATION(RST30)
);

// 0xF8: LD HL, SP+e8
SM83_INSTRUCTION_IMPLEMENTATION(LDHLSP8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDHLSP8,
    SM83_INSTRUCTION_DECLARATION(LDHLSP8)
);

// 0xF9: LD SP, HL
SM83_INSTRUCTION_IMPLEMENTATION(LDSPHL,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDSPHL,
    SM83_INSTRUCTION_DECLARATION(LDSPHL)
);

// 0xFA: LD A, [a16]
SM83_INSTRUCTION_IMPLEMENTATION(LDA16,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    LDA16,
    SM83_INSTRUCTION_DECLARATION(LDA16)
);

// 0xFB: EI
SM83_INSTRUCTION_IMPLEMENTATION(EI,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    EI,
    SM83_INSTRUCTION_DECLARATION(EI)
);

// 0xFE: CP A, n8
SM83_INSTRUCTION_IMPLEMENTATION(CPA8,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    CPA8,
    SM83_INSTRUCTION_DECLARATION(CPA8)
);

// 0xFF: RST $38
SM83_INSTRUCTION_IMPLEMENTATION(RST38,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    RST38,
    SM83_INSTRUCTION_DECLARATION(RST38)
);

// **********************************

// 0x??: ---
SM83_INSTRUCTION_IMPLEMENTATION(INVALID,)

SM83_INSTRUCTION_STEPS_IMPLEMENTATION(
    INVALID,
    SM83_INSTRUCTION_DECLARATION(INVALID)
);

// **********************************

const SM83Opcode opcodesTable8Bit[] = {
    // 0x00
    SM83_INSTRUCTION_INFO(0x00, "NOP",          1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(NOP)),
    SM83_INSTRUCTION_INFO(0x01, "LD BC, n16",   3, 3, SM83_INSTRUCTION_STEPS_DECLARATION(LDBC16)),
    SM83_INSTRUCTION_INFO(0x02, "LD [BC], A",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDBCpA)),
    SM83_INSTRUCTION_INFO(0x03, "INC BC",       1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(INCBC)),
    SM83_INSTRUCTION_INFO(0x04, "INC B",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INCB)),
    SM83_INSTRUCTION_INFO(0x05, "DEC B",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(DECB)),
    SM83_INSTRUCTION_INFO(0x06, "LD B, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDBN)),
    SM83_INSTRUCTION_INFO(0x07, "RLCA",         1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(RLCA)),
    SM83_INSTRUCTION_INFO(0x08, "LD [a16], SP", 3, 5, SM83_INSTRUCTION_STEPS_DECLARATION(LDASP16)),
    SM83_INSTRUCTION_INFO(0x09, "ADD HL, BC",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ADDHLBC)),
    SM83_INSTRUCTION_INFO(0x0A, "LD A, [BC]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(DLABCp)),
    SM83_INSTRUCTION_INFO(0x0B, "DEC BC",       1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(DECBC)),
    SM83_INSTRUCTION_INFO(0x0C, "INC C",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INCC)),
    SM83_INSTRUCTION_INFO(0x0D, "DEC C",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(DECC)),
    SM83_INSTRUCTION_INFO(0x0E, "LD C, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDC8)),
    SM83_INSTRUCTION_INFO(0x0F, "RRCA",         1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(RRCA)),

    // 0x10
    SM83_INSTRUCTION_INFO(0x10, "STOP n8",      2, 1, SM83_INSTRUCTION_STEPS_DECLARATION(STOP8)),
    SM83_INSTRUCTION_INFO(0x11, "LD DE, n16",   3, 3, SM83_INSTRUCTION_STEPS_DECLARATION(LDDE16)),
    SM83_INSTRUCTION_INFO(0x12, "LD [DE], A",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDDEE)),
    SM83_INSTRUCTION_INFO(0x13, "INC DE",       1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(INCDE)),
    SM83_INSTRUCTION_INFO(0x14, "INC D",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INCD)),
    SM83_INSTRUCTION_INFO(0x15, "DEC D",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(DECD)),
    SM83_INSTRUCTION_INFO(0x16, "LD D, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDD8)),
    SM83_INSTRUCTION_INFO(0x17, "RLA",          1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(RLA)),
    SM83_INSTRUCTION_INFO(0x18, "JR e8",        2, 3, SM83_INSTRUCTION_STEPS_DECLARATION(JR8)),
    SM83_INSTRUCTION_INFO(0x19, "ADD HL, DE",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ADDHLDE)),
    SM83_INSTRUCTION_INFO(0x1A, "LD A, [DE]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDADE)),
    SM83_INSTRUCTION_INFO(0x1B, "DEC DE",       1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(DECDE)),
    SM83_INSTRUCTION_INFO(0x1C, "INC E",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INCE)),
    SM83_INSTRUCTION_INFO(0x1D, "DEC E",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(DECE)),
    SM83_INSTRUCTION_INFO(0x1E, "LD E, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDE8)),
    SM83_INSTRUCTION_INFO(0x1F, "RRA",          1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(RRA)),

    // 0x20
    SM83_INSTRUCTION_INFO(0x20, "JR NZ, e8",    2, 3, SM83_INSTRUCTION_STEPS_DECLARATION(JRNZ8)), // TODO: Could also do it in 2 cycles, so should have a force finish flag to indicate last step can be skipped
    SM83_INSTRUCTION_INFO(0x21, "LD HL, n16",   3, 3, SM83_INSTRUCTION_STEPS_DECLARATION(LDHL16)),
    SM83_INSTRUCTION_INFO(0x22, "LD [HL+], A",  1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDHLA)),
    SM83_INSTRUCTION_INFO(0x23, "INC HL",       1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(INCHL)),
    SM83_INSTRUCTION_INFO(0x24, "INC H",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INCH)),
    SM83_INSTRUCTION_INFO(0x25, "DEC H",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(DECH)),
    SM83_INSTRUCTION_INFO(0x26, "LD H, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDH8)),
    SM83_INSTRUCTION_INFO(0x27, "DAA",          1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(DAA)),
    SM83_INSTRUCTION_INFO(0x28, "JR Z, e8",     2, 3, SM83_INSTRUCTION_STEPS_DECLARATION(JRZ8)), // TODO: Could be 2 too
    SM83_INSTRUCTION_INFO(0x29, "ADD HL, HL",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ADDHLHL)),
    SM83_INSTRUCTION_INFO(0x2A, "LD A, [HL+]",  1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDAHLpp)),
    SM83_INSTRUCTION_INFO(0x2B, "DEC HL",       1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(DECHL)),
    SM83_INSTRUCTION_INFO(0x2C, "INC L",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INCL)),
    SM83_INSTRUCTION_INFO(0x2D, "DEC L",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(DECL)),
    SM83_INSTRUCTION_INFO(0x2E, "LD L, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDL8)),
    SM83_INSTRUCTION_INFO(0x2F, "CPL",          1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(CPL)),

    // 0x30
    SM83_INSTRUCTION_INFO(0x30, "JR NC, e8",    2, 3, SM83_INSTRUCTION_STEPS_DECLARATION(JRNC8)), // TODO: Could be 2 too
    SM83_INSTRUCTION_INFO(0x31, "LD SP, n16",   3, 3, SM83_INSTRUCTION_STEPS_DECLARATION(LDSP16)),
    SM83_INSTRUCTION_INFO(0x32, "LD [LD-], A",  1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDLDA)),
    SM83_INSTRUCTION_INFO(0x33, "INC SP",       1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(INCSP)),
    SM83_INSTRUCTION_INFO(0x34, "INC [HL]",     1, 3, SM83_INSTRUCTION_STEPS_DECLARATION(INCHLp)),
    SM83_INSTRUCTION_INFO(0x35, "DEC [HL]",     1, 3, SM83_INSTRUCTION_STEPS_DECLARATION(DECHLp)),
    SM83_INSTRUCTION_INFO(0x36, "LD [HL], n8",  2, 3, SM83_INSTRUCTION_STEPS_DECLARATION(LDHL8)),
    SM83_INSTRUCTION_INFO(0x37, "SCF",          1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SCF)),
    SM83_INSTRUCTION_INFO(0x38, "JR C, e8",     2, 3, SM83_INSTRUCTION_STEPS_DECLARATION(JRC8)), // TODO: Could be 2 too
    SM83_INSTRUCTION_INFO(0x39, "ADD HL, SP",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ADDHLSP)),
    SM83_INSTRUCTION_INFO(0x3A, "LD A, [HL-]",  1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDAHLpm)),
    SM83_INSTRUCTION_INFO(0x3B, "DEC SP",       1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(DECSP)),
    SM83_INSTRUCTION_INFO(0x3C, "INC A",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INCA)),
    SM83_INSTRUCTION_INFO(0x3D, "DEC A",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(DECA)),
    SM83_INSTRUCTION_INFO(0x3E, "LD A, n8",     2, 4, SM83_INSTRUCTION_STEPS_DECLARATION(LDA8)),
    SM83_INSTRUCTION_INFO(0x3F, "CCF",          1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(CCF)),

    // 0x40
    SM83_INSTRUCTION_INFO(0x40, "LD B, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDBB)),
    SM83_INSTRUCTION_INFO(0x41, "LD B, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDBC)),
    SM83_INSTRUCTION_INFO(0x42, "LD B, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDBD)),
    SM83_INSTRUCTION_INFO(0x43, "LD B, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDBE)),
    SM83_INSTRUCTION_INFO(0x44, "LD B, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDBH)),
    SM83_INSTRUCTION_INFO(0x45, "LD B, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDBL)),
    SM83_INSTRUCTION_INFO(0x46, "LD B, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDBHLp)),
    SM83_INSTRUCTION_INFO(0x47, "LD B, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDBA)),
    SM83_INSTRUCTION_INFO(0x48, "LD C, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDCB)),
    SM83_INSTRUCTION_INFO(0x49, "LD C, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDCC)),
    SM83_INSTRUCTION_INFO(0x4A, "LD C, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDCD)),
    SM83_INSTRUCTION_INFO(0x4B, "LD C, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDCE)),
    SM83_INSTRUCTION_INFO(0x4C, "LD C, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDCH)),
    SM83_INSTRUCTION_INFO(0x4D, "LD C, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDCL)),
    SM83_INSTRUCTION_INFO(0x4E, "LD C, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDCHLp)),
    SM83_INSTRUCTION_INFO(0x4F, "LD C, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDCA)),
    
    // 0x50
    SM83_INSTRUCTION_INFO(0x50, "LD D, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDDB)),
    SM83_INSTRUCTION_INFO(0x51, "LD D, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDDC)),
    SM83_INSTRUCTION_INFO(0x52, "LD D, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDDD)),
    SM83_INSTRUCTION_INFO(0x53, "LD D, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDDE)),
    SM83_INSTRUCTION_INFO(0x54, "LD D, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDDH)),
    SM83_INSTRUCTION_INFO(0x55, "LD D, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDDL)),
    SM83_INSTRUCTION_INFO(0x56, "LD D, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDDHLp)),
    SM83_INSTRUCTION_INFO(0x57, "LD D, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDDA)),
    SM83_INSTRUCTION_INFO(0x58, "LD E, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDEB)),
    SM83_INSTRUCTION_INFO(0x59, "LD E, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDEC)),
    SM83_INSTRUCTION_INFO(0x5A, "LD E, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDED)),
    SM83_INSTRUCTION_INFO(0x5B, "LD E, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDEE)),
    SM83_INSTRUCTION_INFO(0x5C, "LD E, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDEH)),
    SM83_INSTRUCTION_INFO(0x5D, "LD E, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDEL)),
    SM83_INSTRUCTION_INFO(0x5E, "LD E, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDEHLp)),
    SM83_INSTRUCTION_INFO(0x5F, "LD E, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDEA)),

    // 0x60
    SM83_INSTRUCTION_INFO(0x60, "LD H, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDHB)),
    SM83_INSTRUCTION_INFO(0x61, "LD H, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDHC)),
    SM83_INSTRUCTION_INFO(0x62, "LD H, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDHD)),
    SM83_INSTRUCTION_INFO(0x63, "LD H, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDHE)),
    SM83_INSTRUCTION_INFO(0x64, "LD H, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDHH)),
    SM83_INSTRUCTION_INFO(0x65, "LD H, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDHL)),
    SM83_INSTRUCTION_INFO(0x66, "LD H, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDHHLp)),
    SM83_INSTRUCTION_INFO(0x67, "LD H, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDHA)),
    SM83_INSTRUCTION_INFO(0x68, "LD L, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDLB)),
    SM83_INSTRUCTION_INFO(0x69, "LD L, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDLC)),
    SM83_INSTRUCTION_INFO(0x6A, "LD L, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDLD)),
    SM83_INSTRUCTION_INFO(0x6B, "LD L, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDLE)),
    SM83_INSTRUCTION_INFO(0x6C, "LD L, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDLH)),
    SM83_INSTRUCTION_INFO(0x6D, "LD L, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDLL)),
    SM83_INSTRUCTION_INFO(0x6E, "LD L, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDLHLp)),
    SM83_INSTRUCTION_INFO(0x6F, "LD L, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDLA)),

    // 0x70
    SM83_INSTRUCTION_INFO(0x70, "LD [HL], B",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDHLpB)),
    SM83_INSTRUCTION_INFO(0x71, "LD [HL], C",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDHLpC)),
    SM83_INSTRUCTION_INFO(0x72, "LD [HL], D",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDHLpD)),
    SM83_INSTRUCTION_INFO(0x73, "LD [HL], E",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDHLpE)),
    SM83_INSTRUCTION_INFO(0x74, "LD [HL], H",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDHLpH)),
    SM83_INSTRUCTION_INFO(0x75, "LD [HL], L",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDHLpL)),
    SM83_INSTRUCTION_INFO(0x76, "HALT",         1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(HALT)),
    SM83_INSTRUCTION_INFO(0x77, "LD [HL], A",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDHLpA)),
    SM83_INSTRUCTION_INFO(0x78, "LD A, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDAB)),
    SM83_INSTRUCTION_INFO(0x79, "LD A, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDAC)),
    SM83_INSTRUCTION_INFO(0x7A, "LD A, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDAD)),
    SM83_INSTRUCTION_INFO(0x7B, "LD A, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDAE)),
    SM83_INSTRUCTION_INFO(0x7C, "LD A, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDAH)),
    SM83_INSTRUCTION_INFO(0x7D, "LD A, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDAL)),
    SM83_INSTRUCTION_INFO(0x7E, "LD A, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDAHLp)),
    SM83_INSTRUCTION_INFO(0x7F, "LD A, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(LDAA)),

    // 0x80
    SM83_INSTRUCTION_INFO(0x80, "ADD A, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADDAB)),
    SM83_INSTRUCTION_INFO(0x81, "ADD A, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADDAC)),
    SM83_INSTRUCTION_INFO(0x82, "ADD A, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADDAD)),
    SM83_INSTRUCTION_INFO(0x83, "ADD A, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADDAE)),
    SM83_INSTRUCTION_INFO(0x84, "ADD A, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADDAH)),
    SM83_INSTRUCTION_INFO(0x85, "ADD A, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADDAL)),
    SM83_INSTRUCTION_INFO(0x86, "ADD A, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ADDAHLp)),
    SM83_INSTRUCTION_INFO(0x87, "ADD A, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADDAA)),
    SM83_INSTRUCTION_INFO(0x88, "ADC A, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADCAB)),
    SM83_INSTRUCTION_INFO(0x89, "ADC A, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADCAC)),
    SM83_INSTRUCTION_INFO(0x8A, "ADC A, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADCAD)),
    SM83_INSTRUCTION_INFO(0x8B, "ADC A, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADCAE)),
    SM83_INSTRUCTION_INFO(0x8C, "ADC A, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADCAH)),
    SM83_INSTRUCTION_INFO(0x8D, "ADC A, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADCAL)),
    SM83_INSTRUCTION_INFO(0x8E, "ADC A, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ADCAHLp)),
    SM83_INSTRUCTION_INFO(0x8F, "ADC A, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ADCAA)),

    // 0x90
    SM83_INSTRUCTION_INFO(0x90, "SUB A, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SUBAB)),
    SM83_INSTRUCTION_INFO(0x91, "SUB A, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SUBAC)),
    SM83_INSTRUCTION_INFO(0x92, "SUB A, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SUBAD)),
    SM83_INSTRUCTION_INFO(0x93, "SUB A, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SUBAE)),
    SM83_INSTRUCTION_INFO(0x94, "SUB A, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SUBAH)),
    SM83_INSTRUCTION_INFO(0x95, "SUB A, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SUBAL)),
    SM83_INSTRUCTION_INFO(0x96, "SUB A, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(SUBAHLp)),
    SM83_INSTRUCTION_INFO(0x97, "SUB A, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SUBAA)),
    SM83_INSTRUCTION_INFO(0x98, "SBC A, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SBCAB)),
    SM83_INSTRUCTION_INFO(0x99, "SBC A, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SBCAC)),
    SM83_INSTRUCTION_INFO(0x9A, "SBC A, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SBCAD)),
    SM83_INSTRUCTION_INFO(0x9B, "SBC A, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SBCAE)),
    SM83_INSTRUCTION_INFO(0x9C, "SBC A, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SBCAH)),
    SM83_INSTRUCTION_INFO(0x9D, "SBC A, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SBCAL)),
    SM83_INSTRUCTION_INFO(0x9E, "SBC A, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(SBCAHLp)),
    SM83_INSTRUCTION_INFO(0x9F, "SBC A, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(SBCAA)),

    // 0xA0
    SM83_INSTRUCTION_INFO(0xA0, "AND A, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ANDAB)),
    SM83_INSTRUCTION_INFO(0xA1, "AND A, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ANDAC)),
    SM83_INSTRUCTION_INFO(0xA2, "AND A, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ANDAD)),
    SM83_INSTRUCTION_INFO(0xA3, "AND A, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ANDAE)),
    SM83_INSTRUCTION_INFO(0xA4, "AND A, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ANDAH)),
    SM83_INSTRUCTION_INFO(0xA5, "AND A, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ANDAL)),
    SM83_INSTRUCTION_INFO(0xA6, "AND A, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ANDAHLp)),
    SM83_INSTRUCTION_INFO(0xA7, "AND A, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ANDAA)),
    SM83_INSTRUCTION_INFO(0xA8, "XOR A, B",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(XORAB)),
    SM83_INSTRUCTION_INFO(0xA9, "XOR A, C",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(XORAC)),
    SM83_INSTRUCTION_INFO(0xAA, "XOR A, D",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(XORAD)),
    SM83_INSTRUCTION_INFO(0xAB, "XOR A, E",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(XORAE)),
    SM83_INSTRUCTION_INFO(0xAC, "XOR A, H",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(XORAH)),
    SM83_INSTRUCTION_INFO(0xAD, "XOR A, L",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(XORAL)),
    SM83_INSTRUCTION_INFO(0xAE, "XOR A, [HL]",   1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(XORAHLp)),
    SM83_INSTRUCTION_INFO(0xAF, "XOR A, A",      1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(XORAA)),

    // 0xB0
    SM83_INSTRUCTION_INFO(0xB0, "OR A, B",       1, 5, SM83_INSTRUCTION_STEPS_DECLARATION(ORAB)),
    SM83_INSTRUCTION_INFO(0xB1, "OR A, C",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ORAC)),
    SM83_INSTRUCTION_INFO(0xB2, "OR A, D",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ORAD)),
    SM83_INSTRUCTION_INFO(0xB3, "OR A, E",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ORAE)),
    SM83_INSTRUCTION_INFO(0xB4, "OR A, H",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ORAH)),
    SM83_INSTRUCTION_INFO(0xB5, "OR A, L",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ORAL)),
    SM83_INSTRUCTION_INFO(0xB6, "OR A, [HL]",    1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ORAHLp)),
    SM83_INSTRUCTION_INFO(0xB7, "OR A, A",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(ORAA)),
    SM83_INSTRUCTION_INFO(0xB8, "CP A, B",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(CPAB)),
    SM83_INSTRUCTION_INFO(0xB9, "CP A, C",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(CPAC)),
    SM83_INSTRUCTION_INFO(0xBA, "CP A, D",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(CPAD)),
    SM83_INSTRUCTION_INFO(0xBB, "CP A, E",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(CPAE)),
    SM83_INSTRUCTION_INFO(0xBC, "CP A, H",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(CPAH)),
    SM83_INSTRUCTION_INFO(0xBD, "CP A, L",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(CPAL)),
    SM83_INSTRUCTION_INFO(0xBE, "CP A, [HL]",    1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(CPAHLp)),
    SM83_INSTRUCTION_INFO(0xBF, "CP A, A",       1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(CPAA)),

    // 0xC0
    SM83_INSTRUCTION_INFO(0xC0, "RET NZ",        1, 5, SM83_INSTRUCTION_STEPS_DECLARATION(RETNZ)), // TODO: Could be 2 too 
    SM83_INSTRUCTION_INFO(0xC1, "POP BC",        1, 3, SM83_INSTRUCTION_STEPS_DECLARATION(POPBC)),
    SM83_INSTRUCTION_INFO(0xC2, "JR NZ, a16",    1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(JRNZ16)), // TODO: Could be 3 too 
    SM83_INSTRUCTION_INFO(0xC3, "JP a16",        3, 4, SM83_INSTRUCTION_STEPS_DECLARATION(JP16)),
    SM83_INSTRUCTION_INFO(0xC4, "CALL NZ, a16",  3, 6, SM83_INSTRUCTION_STEPS_DECLARATION(CALLNZ16)), // TODO: Could be 3 too 
    SM83_INSTRUCTION_INFO(0xC5, "PUSH BC",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(PUSHBC)),
    SM83_INSTRUCTION_INFO(0xC6, "ADD A, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ADDA8)),
    SM83_INSTRUCTION_INFO(0xC7, "RST $00",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(RST00)),
    SM83_INSTRUCTION_INFO(0xC8, "RET Z",         1, 5, SM83_INSTRUCTION_STEPS_DECLARATION(RETZ)), // TODO: Could be 2 too 
    SM83_INSTRUCTION_INFO(0xC9, "RET",           1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(RET)),
    SM83_INSTRUCTION_INFO(0xCA, "JP Z, a16",     3, 4, SM83_INSTRUCTION_STEPS_DECLARATION(JPZ16)), // TODO: Could be 3 too 
    SM83_INSTRUCTION_INFO(0xCB, "PREFIX",        1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(PREFIX)),
    SM83_INSTRUCTION_INFO(0xCC, "CALL Z, a16",   3, 6, SM83_INSTRUCTION_STEPS_DECLARATION(CALLZ16)), // TODO: Could be 3 too
    SM83_INSTRUCTION_INFO(0xCD, "CALL a16",      3, 6, SM83_INSTRUCTION_STEPS_DECLARATION(CALL16)),
    SM83_INSTRUCTION_INFO(0xCE, "ADC A, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ADCA8)),
    SM83_INSTRUCTION_INFO(0xCF, "RST $08",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(RST08)),

    // 0xD0
    SM83_INSTRUCTION_INFO(0xD0, "RET NC",        1, 5, SM83_INSTRUCTION_STEPS_DECLARATION(RETNC)), // TODO: Could be 2 too 
    SM83_INSTRUCTION_INFO(0xD1, "POP DE",        1, 3, SM83_INSTRUCTION_STEPS_DECLARATION(POPDE)),
    SM83_INSTRUCTION_INFO(0xD2, "JR NC, a16",    1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(JRNC16)), // TODO: Could be 3 too 
    SM83_INSTRUCTION_INFO(0xD3, "---",           1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INVALID)),
    SM83_INSTRUCTION_INFO(0xD4, "CALL NC, a16",  3, 6, SM83_INSTRUCTION_STEPS_DECLARATION(CALLNC16)), // TODO: Could be 3 too 
    SM83_INSTRUCTION_INFO(0xD5, "PUSH DE",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(PUSHDE)),
    SM83_INSTRUCTION_INFO(0xD6, "SUB A, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(SUBA8)),
    SM83_INSTRUCTION_INFO(0xD7, "RST $10",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(RST10)),
    SM83_INSTRUCTION_INFO(0xD8, "RET C",         1, 5, SM83_INSTRUCTION_STEPS_DECLARATION(RETC)), // TODO: Could be 2 too 
    SM83_INSTRUCTION_INFO(0xD9, "RETI",          1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(RETI)),
    SM83_INSTRUCTION_INFO(0xDA, "JP C, a16",     3, 4, SM83_INSTRUCTION_STEPS_DECLARATION(JPC16)), // TODO: Could be 3 too 
    SM83_INSTRUCTION_INFO(0xDB, "---",           1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INVALID)),
    SM83_INSTRUCTION_INFO(0xDC, "CALL C, a16",   3, 6, SM83_INSTRUCTION_STEPS_DECLARATION(CALLC16)), // TODO: Could be 3 too
    SM83_INSTRUCTION_INFO(0xDD, "---",           1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INVALID)),
    SM83_INSTRUCTION_INFO(0xDE, "SBC A, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(SBCA8)),
    SM83_INSTRUCTION_INFO(0xDF, "RST $18",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(RST18)),

    // 0xE0
    SM83_INSTRUCTION_INFO(0xE0, "LDH [a8], A",   2, 3, SM83_INSTRUCTION_STEPS_DECLARATION(LDH8A)),
    SM83_INSTRUCTION_INFO(0xE1, "POP HL",        1, 3, SM83_INSTRUCTION_STEPS_DECLARATION(POPHL)),
    SM83_INSTRUCTION_INFO(0xE2, "LD [C], A",     1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDCpA)), 
    SM83_INSTRUCTION_INFO(0xE3, "---",           1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INVALID)),
    SM83_INSTRUCTION_INFO(0xE4, "---",           1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INVALID)),
    SM83_INSTRUCTION_INFO(0xE5, "PUSH HL",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(PUSHHL)),
    SM83_INSTRUCTION_INFO(0xE6, "AND A, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ANDA8)),
    SM83_INSTRUCTION_INFO(0xE7, "RST $20",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(RST20)),
    SM83_INSTRUCTION_INFO(0xE8, "ADD SP, e8",    2, 4, SM83_INSTRUCTION_STEPS_DECLARATION(ADDSP8)), 
    SM83_INSTRUCTION_INFO(0xE9, "JP HL",         1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(JPHL)),
    SM83_INSTRUCTION_INFO(0xEA, "LD [a16], A",   3, 4, SM83_INSTRUCTION_STEPS_DECLARATION(LD16A)),  
    SM83_INSTRUCTION_INFO(0xEB, "---",           1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INVALID)),
    SM83_INSTRUCTION_INFO(0xEC, "---",           1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INVALID)),
    SM83_INSTRUCTION_INFO(0xED, "---",           1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INVALID)),
    SM83_INSTRUCTION_INFO(0xEE, "XOR A, n8",     2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(XORA8)),
    SM83_INSTRUCTION_INFO(0xEF, "RST $28",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(RST28)),

    // 0xF0
    SM83_INSTRUCTION_INFO(0xF0, "LDH A, [a8]",   2, 3, SM83_INSTRUCTION_STEPS_DECLARATION(LDHA8)),
    SM83_INSTRUCTION_INFO(0xF1, "POP AF",        1, 3, SM83_INSTRUCTION_STEPS_DECLARATION(POPAF)),
    SM83_INSTRUCTION_INFO(0xF2, "LD A, [C]",     1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDACp)), 
    SM83_INSTRUCTION_INFO(0xF3, "DI",            1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(DI)),
    SM83_INSTRUCTION_INFO(0xF4, "---",           1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INVALID)),
    SM83_INSTRUCTION_INFO(0xF5, "PUSH AF",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(PUSHAF)),
    SM83_INSTRUCTION_INFO(0xF6, "OR A, n8",      2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(ORA8)),
    SM83_INSTRUCTION_INFO(0xF7, "RST $30",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(RST30)),
    SM83_INSTRUCTION_INFO(0xF8, "LD HL, SP+e8",  2, 3, SM83_INSTRUCTION_STEPS_DECLARATION(LDHLSP8)), 
    SM83_INSTRUCTION_INFO(0xF9, "LD SP, HL",     1, 2, SM83_INSTRUCTION_STEPS_DECLARATION(LDSPHL)),
    SM83_INSTRUCTION_INFO(0xFA, "LD A, [a16]",   3, 4, SM83_INSTRUCTION_STEPS_DECLARATION(LDA16)),  
    SM83_INSTRUCTION_INFO(0xFB, "EI",            1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(EI)),
    SM83_INSTRUCTION_INFO(0xFC, "---",           1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INVALID)),
    SM83_INSTRUCTION_INFO(0xFD, "---",           1, 1, SM83_INSTRUCTION_STEPS_DECLARATION(INVALID)),
    SM83_INSTRUCTION_INFO(0xFE, "CP A, n8",      2, 2, SM83_INSTRUCTION_STEPS_DECLARATION(CPA8)),
    SM83_INSTRUCTION_INFO(0xFF, "RST $38",       1, 4, SM83_INSTRUCTION_STEPS_DECLARATION(RST38)),
};
